name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      next:
        description: "Next version"
        required: false

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'zulu'

      - name: 'Cache Maven packages'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Set release version'
        id: version
        run: |
          RELEASE_VERSION=${{ github.event.inputs.version }}
          NEXT_VERSION=${{ github.event.inputs.next }}
          PLAIN_VERSION=`echo ${RELEASE_VERSION} | awk 'match($0, /^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)/) { print substr($0, RSTART, RLENGTH); }'`
          COMPUTED_NEXT_VERSION="${PLAIN_VERSION}-SNAPSHOT"
          if [ -z $NEXT_VERSION ]
          then
            NEXT_VERSION=$COMPUTED_NEXT_VERSION
          fi
          ./mvnw -B versions:set versions:commit -DnewVersion=$RELEASE_VERSION
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "üèÅ Releasing version $RELEASE_VERSION"
          git push origin HEAD:main
          git rev-parse HEAD > HEAD
          echo $RELEASE_VERSION > RELEASE_VERSION
          echo $PLAIN_VERSION > PLAIN_VERSION
          echo $NEXT_VERSION > NEXT_VERSION

      - name: 'Upload version files'
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: |
            HEAD
            *_VERSION

  build:
    needs: [ version ]
    runs-on: ubuntu-latest

    steps:
      - name: 'Download all build artifacts'
        uses: actions/download-artifact@v2

      - name: 'Read HEAD ref'
        id: head
        uses: juliangruber/read-file-action@v1
        with:
          path: artifacts/HEAD

      - name: 'Check out repository'
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.head.outputs.content }}
        
      - name: 'Set up Java'
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'zulu'

      - name: 'Cache Maven packages'
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Build'
        run: ./mvnw -B --file pom.xml verify

      - name: 'Release with JReleaser'
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw -B --file pom.xml -pl :parent jreleaser:full-release
          
      - name: 'Set next version'
        env:
          NEXT_VERSION: ${{ steps.version.outputs.NEXT_VERSION }}
        run: |
          ./mvnw -B versions:set versions:commit -DnewVersion=$NEXT_VERSION
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "‚¨ÜÔ∏è  Next version $NEXT_VERSION"
          git push origin HEAD:main